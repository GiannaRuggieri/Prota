<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ProtaV2.Placeholder">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Lightmode.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <FontFamily x:Key="Poppins">/Fonts/#Poppins</FontFamily>
    <FontFamily x:Key="Notepad">/Fonts/#Notepad</FontFamily>
    <FontFamily x:Key="Trispace">/Fonts/#trispace</FontFamily>
    <FontFamily x:Key="Bainsley">/Fonts/#Bainsley</FontFamily>


    <!--  Date picker style  -->
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <!--  Default Button Style  -->
    <Style x:Key="DefaultButton" TargetType="{x:Type Button}">

        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _Black}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _White}" />
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _Black}" />
            </Setter.Value>
        </Setter>

        <Setter Property="Content" Value="Default Text" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="5"
                    Direction="320"
                    Opacity="0.5"
                    ShadowDepth="3"
                    Color="Black" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="12">
                        <Grid>

                            <TextBlock
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="{StaticResource _MedWhite}"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="{StaticResource _White}"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.ExitActions>
            </Trigger>

            <EventTrigger RoutedEvent="Click">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard
                            AutoReverse="True"
                            BeginTime="00:00:00"
                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)">
                            <DoubleAnimation To="0.98" Duration="0:0:0.125" />
                        </Storyboard>

                    </BeginStoryboard>

                    <BeginStoryboard>
                        <Storyboard
                            AutoReverse="True"
                            BeginTime="00:00:00"
                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)">

                            <DoubleAnimation To="0.98" Duration="0:0:0.125" />
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="0.4"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Reset Button Style  -->
    <Style x:Key="ResetButton" TargetType="{x:Type Button}">

        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _White}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _Red}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="Default Text" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="5"
                    Direction="320"
                    Opacity="0.5"
                    ShadowDepth="3"
                    Color="Black" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="12">
                        <Grid>

                            <TextBlock
                                Padding="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>

                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="{StaticResource _MedRed}"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                To="{StaticResource _Red}"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.ExitActions>
            </Trigger>

            <EventTrigger RoutedEvent="Click">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard
                            AutoReverse="True"
                            BeginTime="00:00:00"
                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)">
                            <DoubleAnimation To="0.98" Duration="0:0:0.125" />
                        </Storyboard>

                    </BeginStoryboard>

                    <BeginStoryboard>
                        <Storyboard
                            AutoReverse="True"
                            BeginTime="00:00:00"
                            Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)">

                            <DoubleAnimation To="0.98" Duration="0:0:0.125" />
                        </Storyboard>

                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="0.4"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Scrollbar Thumbs  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent" />
                        <Border
                            x:Name="Rectangle1"
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBars  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _Black}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border
                        Width="16"
                        Padding="0"
                        HorizontalAlignment="Right"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="4"
                        CornerRadius="8">
                        <Track
                            x:Name="PART_Track"
                            Focusable="false"
                            IsDirectionReversed="true">

                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.IncreaseRepeatButton>

                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Focusable="false"
                                    Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="LightGray" />
                        </Trigger>

                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="#cccccc" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Type ListBoxItem}"
        x:Name="ListItem2"
        TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        BorderBrush="Transparent"
                        BorderThickness="2"
                        CornerRadius="16"
                        SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>

                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Cursor" Value="Hand" />

                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.2" Color="{StaticResource _White}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.2" Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Opacity="0.2" Color="{StaticResource _White}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black" />

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>



    </Style>

    <Style x:Key="ListItem2" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        BorderBrush="Transparent"
                        BorderThickness="2"
                        CornerRadius="16"
                        SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>

                        <ContentPresenter />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>



    </Style>

    <!--  ComboBox  -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                BorderBrush="Black"
                BorderThickness="1"
                CornerRadius="0">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource _lightyellow}" />
                </Border.Background>
            </Border>
            <Border
                Grid.Column="0"
                Margin="1"
                BorderBrush="Black"
                BorderThickness="0,0,1,0"
                CornerRadius="0">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource _lightyellow}" />
                </Border.Background>
            </Border>
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="Black" />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style x:Key="CCB" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _Black}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="#FF3F3F3F"
                            Focusable="True"
                            Foreground="Green"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">

                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    BorderBrush="Black"
                                    BorderThickness="1">
                                    <Border.Background>
                                        <SolidColorBrush Color="{StaticResource _lightyellow}" />
                                    </Border.Background>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>

    <!--  SimpleStyles: ComboBoxItem  -->
    <Style x:Key="CCBI" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource _Black}" />
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        Name="Border"
                        Padding="2"
                        SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FFADD8E6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Placeholder  -->
    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type local:PlaceholderTextBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PlaceholderTextBoxControl}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" />
                            <TextBlock
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                IsHitTestVisible="False"
                                Opacity="0.5"
                                Text="{TemplateBinding ToolTip}"
                                Visibility="{TemplateBinding IsEmpty,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for the days of a month.  -->
    <Style x:Key="CalendarDayButtonStyle" TargetType="CalendarDayButton">
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <Rectangle
                            x:Name="TodayBackground"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle
                            x:Name="SelectedBackground"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle
                            x:Name="HighlightBackground"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource ControlMouseOverColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="5,1,5,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Path
                            x:Name="Blackout"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Data="M8.1772461,11.029181 L10.433105,                   11.029181 L11.700684,12.801641 L12.973633,                   11.029181 L15.191895,11.029181 L12.844727,                   13.999395 L15.21875,17.060919 L12.962891,                   17.060919 L11.673828,15.256231 L10.352539,                   17.060919 L8.1396484,17.060919 L10.519043,                   14.042364 z"
                            Fill="#FF000000"
                            Opacity="0"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill" />
                        <Rectangle
                            x:Name="DayButtonFocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="1"
                            RadiusY="1"
                            Visibility="Collapsed">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".35"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)"
                                            To="#FF777777"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="TodayBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)"
                                            To="White"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Blackout"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".2"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for the months of a year and years of a decade.  -->
    <Style x:Key="CalendarButtonStyle" TargetType="CalendarButton">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <Rectangle
                            x:Name="SelectedBackground"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle
                            x:Name="Background"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="1,0,1,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="#FF333333" />
                            </TextElement.Foreground>
                        </ContentPresenter>
                        <Rectangle
                            x:Name="CalendarButtonFocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="1"
                            RadiusY="1"
                            Visibility="Collapsed">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource SelectedBackgroundColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)"
                                            To="#FF777777"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlMediumColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button to go to the previous month or year.  -->
    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
            <Grid Background="Transparent">
                <Path
                    x:Name="path"
                    Width="6"
                    Height="10"
                    Margin="14,-6,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                    Stretch="Fill">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="{DynamicResource GlyphMouseOver}"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                To=".5"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--  Button to go to the next month or year.  -->
    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
            <Grid Background="Transparent">
                <Path
                    x:Name="path"
                    Width="6"
                    Height="10"
                    Margin="0,-6,14,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                    Stretch="Fill">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                To="{StaticResource GlyphMouseOver}"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="path"
                                Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                To=".5"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--  Button to go up a level to the year or decade.  -->
    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand">
            <ContentPresenter
                x:Name="buttonContent"
                Margin="1,4,1,9"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                TextElement.Foreground="#FF333333" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="buttonContent"
                                Storyboard.TargetProperty="(TextElement.Foreground).                 (SolidColorBrush.Color)"
                                To="{DynamicResource GlyphMouseOver}"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="buttonContent"
                                Storyboard.TargetProperty="Opacity"
                                To=".5"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock
                                Margin="0,6,0,6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="Verdana"
                                FontSize="9.5"
                                FontWeight="Bold"
                                Foreground="#FF333333"
                                Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1">
                            <Border
                                BorderBrush="White"
                                BorderThickness="2"
                                CornerRadius="1">
                                <Grid>
                                    <Grid.Resources />
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Width="28"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        Focusable="False"
                                        Template="{StaticResource PreviousButtonTemplate}" />
                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontSize="10.5"
                                        FontWeight="Bold"
                                        Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button
                                        x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Width="28"
                                        Height="20"
                                        HorizontalAlignment="Right"
                                        Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}" />
                                    <Grid
                                        x:Name="PART_MonthView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,-1,6,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,-3,7,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Fill="{StaticResource DisabledColor}"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2"
                            Stretch="Fill"
                            Stroke="{StaticResource DisabledColor}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DisabledVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">

                    <!--
                        The first two gradient stops specifies the background for
                        the calendar's heading and navigation buttons.
                    -->
                    <GradientStop Offset="0" Color="{DynamicResource HeaderTopColor}" />
                    <GradientStop Offset="0.16" Color="{DynamicResource ControlMediumColor}" />

                    <!--
                        The next gradient stop specifies the background for
                        the calendar area.
                    -->
                    <GradientStop Offset="0.16" Color="{DynamicResource ControlLightColor}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="{DynamicResource BorderLightColor}" />
                    <GradientStop Offset="1" Color="{DynamicResource BorderDarkColor}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem
                            x:Name="PART_CalendarItem"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>